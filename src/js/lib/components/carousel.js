import $ from '../core';

$.prototype.carousel = function() {
    for (let i = 0; i < this.length; i++) {
/* Нам необходимо взять общую оболочку для всех слайдов(сейчас это блок с классом carousel-slides), этому блоку мы устанавливаем
ширину в зависимости от кства слайдов, те мы возьмем три слайда по 100 процентов ширины блока карусель-слайдс и установим
его как инлайд стили, таким образом карусель слайдс сможет вместить в себя 3 наших слайда.
   Нужно помнить что у каждого слайда разная ширина и что бы все было семетрично мы установим каждому отдельному слайду нужное
значение ширины и самый легкий вариант это взять ширину у блока carousel-inner который оборачивает все в слайдах */

        const width = window.getComputedStyle(this[i].querySelector('.carousel-inner')).width; /* Помещаем ширину блока carousel-inner 
мы достучимся до него через браузер с помощью геткомпьюетстайл, */
        
        //Теперь запишем все слайды внутри нашего слайдера
        const slides = this[i].querySelectorAll('.carousel-item');

        // Создадим как отдельную переменую, потому что это блок который все в себе объединяет
        const slidesField = this[i].querySelector('.carousel-slides');

        // В самом конце урока нам нужно ОЖИВИТЬ КНОПКИ ПО СЕРЕДИНЕ ДЛЯ ПЕРЕКЛЮЧЕНИЯ СЛАЙДЕРА
        const dots = this[i].querySelectorAll('.carousel-indicators li'); // добавили тег li что бы конкретно получить эти индикаторы

        //Внутри this[i] нужно найти часть со слайдами(carousel-slides)
        slidesField.style.width = 100 * slides.length + '%';
/* В него мы устанавливаем ширину которая будет зависить от кство слайдов + процент. Теперь если у нас будет три слайда
то ширина carousel-slides будет ровняться 300 процентов, если 5 то 500 процентов. Это делается что бы мы могли поместить все эти слайды 
во внутрь и что бы они занимали пропорциональную ширину не зависимо от контента внутри */

        // устанавливаем ширину для каждого отдельного слайда
        slides.forEach(slide => {
            slide.style.width = width;
        }); /* Теперь все слайды выстроены в одну линеечку, у всех одна ширина и мы при помощи свойства трансформ сможем их передвигать */

// Создадиим переменую что бы понимать какой слайд сейчас активный и насколько смещать блок slidesField (при помощи свойства трансформ смещать будем)
        let offset = 0;

// Создадим переменую для отслеживание главного слайда который сейчас показывается (оффсет только за смещение отвечал)
        let slideIndex = 0; // 0 = первый слайд

        // Получаем стрелки
        $(this[i].querySelector('[data-slide="next"]')).click((e) => {
            e.preventDefault(); // потому что ссылка

            // Если мы будем кликать в некст много раз,мы дойдем до конца и нам нужно перебросить слайдер в начально положение
            if (offset == (+width.replace(/\D/g, '') * (slides.length - 1))) { 
                offset = 0; // начальное положение
/* в перемной width нам прийдет строка, пе ставим перед ней плюс, с помощью метода replace удаляем все НЕЧИСЛА и заменяем на пустую строку
 */
            } else { // Если слайдер еще не кончается
                offset += +width.replace(/\D/g, '');
            }
            
            slidesField.style.transform = `translateX(-${offset}px)`; /* Это значит что при клике на кнопку некст наш блок slidesField
будет смещаться в лево по оси X и будет показан след слайд в этой линейке слайдов */

/* Теперь все по русски: 1) мы кликаем на элемент 2) мы должны поработать с переменной оффсет которая должна изменяться и отслеживать
положение нашего слайдера, если мы еще не дошли до конца(else), то мы просто переменной офсет добавляем ширину нашего слайда offset += +width.replace(/\D/g, '')
те каждого отдельного слайда и это все дальше хранится в переменной офсет
3) Но если вдруг мы дошли до конца слайда, то мы должны определить это при помощи условия, мы берем переменую офсет которая хранит 
это значение и если текущий слайд последний, ТО ВНУТРИ ЭТОЙ ПЕРЕМЕННОЙ ДОЛЖНО ХРАНИТЬСЯ ПОЛНОЕ РАССТОЯНИЕ(ПОЛНОЯ ШИРИНА) ЭТОГО БЛОКА
И МЫ ЭТО ВСЕ ВЫЧЕСЛЯЕМ, МЫ БЕРЕМ ШИРИНУ (+width.replace(/\D/g, '') КАЖДОГО ОТДЕЛЬНОГО СЛАЙДА И УМНОЖАЕМ ЕЕ НА КСТВО СЛАЙДОВ И ЕСЛИ 
ДВА ЭТИХ ЧИСЛА СОВПАДАЮТ ДРУГ С ДРУГОМ ТО МЫ ПЕРЕМЕЩАЕМ НАШ СЛАЙДЕР В САМОЕ НАЧАЛО.
4) После всех этих оппераий с нашей переменной, мы берем и перемещаем наш slidesField по оси Х причем делаем это в отрицательном
значение , мы перемещаем блок в лево*/

            // Перемещение по кнопкам внизу в центре
            if (slideIndex == slides.length - 1) { // slides.length - 1 - последний слайд
                slideIndex = 0;
            } else { // Если слайд не последний
                slideIndex ++;
            }
            // убираем класс активности у всех
            dots.forEach(dot => dot.classList.remove('active')); // в верстке у нас класс активности в первом лист айтеме
            //назначаем на слайд клика
            dots[slideIndex].classList.add('active');
          
        });

        // Делаем вторую кнопку
        $(this[i].querySelector('[data-slide="prev"]')).click((e) => {
            e.preventDefault();
            if (offset == 0) { //Если наш слайд первый, то мы перемещаем наш слайдер в самый конец 
                offset = +width.replace(/\D/g, '') * (slides.length - 1);
            } else {
                offset -= +width.replace(/\D/g, ''); // Здесь ставим минус потому что мы идем на слайд назад
            }
            
            slidesField.style.transform = `translateX(-${offset}px)`;
         /* Здесь обратная ситуация, если текущий слайд будет первый, те оффсет = 0, то мы должны наш слайдер переместить
в самый конец, те к последнему слайду, это можно сделать при помощи offset == (+width.replace(/\D/g, '') * (slides.length - 1)) */

/* Наш carousel-slides трансформируется, после каждого клика на слайд transform: translateX меняется на 900px, те 0 если первый слайд
900 если второй и 1800 если третий */ 

            // Точки назад
            if (slideIndex == 0) { //Если самый первый слайд и мы пытаемся переключиться назад, то мы переходим к последнему слайду  
                slideIndex = slides.length - 1;
            } else { // Если слайд не первый то просто отнимаем слайдиндекс
                slideIndex --;
            } 
            dots.forEach(dot => dot.classList.remove('active'));
            dots[slideIndex].classList.add('active');
        });

        // Теперь что бы при клике на точку переключался слайд
/* Добавили каруселе главной в html id="example", что бы можно было его использовать внутри нашего сркипта */
        const sliderId = this[i].getAttribute('id');    
        $(`#${sliderId} .carousel-indicators li`).click(e => {
/* Теперь при клике на один из индикаторов нужно получить атрибут дата слайдс ту и установить слайдИндекс в этой значение и просто
переместить наш слайдер*/
            const slideTo = e.target.getAttribute('data-slide-to');

            slideIndex = slideTo;

/* Нужно поработать с переменной offset ведь когда мы хаотично меняем индекс нашего слайда у нас будет менять и оффсет */
            offset = +width.replace(/\D/g, '') * slideTo; /* Теперь у нас одступ будет равен ширине каждого отдельного слайда умноженое
на кство слайдов которое нам нужно пролестать */

            // Теперь смещение наших слайдов 
            slidesField.style.transform = `translateX(-${offset}px)`;

            // Для работы с классами у точек
            dots.forEach(dot => dot.classList.remove('active'));
            dots[slideIndex].classList.add('active');
        });
    } 
};

$('.carousel').carousel(); /* Здесь вместо this[i] подставляем как раз вот этот вот блок */